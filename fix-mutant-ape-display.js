/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Mutant Ape NFT
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ –∏ —Å–µ—Ä–≤–µ—Ä–µ
 */
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import pg from 'pg';
const { Client } = pg;

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const client = new Client({
  connectionString: process.env.DATABASE_URL,
});

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø—É—Ç–µ–π
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const MUTANT_APE_DIR = path.join(process.cwd(), 'mutant_ape_nft');
const IMAGE_PATH_PREFIX = '/mutant_ape_nft/';

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 */
async function checkImageAvailability() {
  console.log('üñºÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π Mutant Ape...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  if (!fs.existsSync(MUTANT_APE_DIR)) {
    console.log(`‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${MUTANT_APE_DIR} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!`);
    console.log('–°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é...');
    fs.mkdirSync(MUTANT_APE_DIR, { recursive: true });
  }
  
  // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  const files = fs.readdirSync(MUTANT_APE_DIR);
  const imageFiles = files.filter(file => file.endsWith('.png') || file.endsWith('.jpg') || file.endsWith('.avif'));
  
  console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${imageFiles.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏`);
  
  // –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ 5 —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
  console.log('üîé –ü—Ä–∏–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:');
  imageFiles.slice(0, 5).forEach((file, index) => {
    const filePath = path.join(MUTANT_APE_DIR, file);
    const stats = fs.statSync(filePath);
    console.log(`${index + 1}. ${file} (${(stats.size / 1024).toFixed(2)} KB)`);
  });
  
  return imageFiles;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 */
async function checkDatabaseImagePaths() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
  
  await client.connect();
  
  // –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ NFT –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Mutant Ape
  const query = `
    SELECT n.id, n.token_id, n.image_path, n.name, c.name as collection_name
    FROM nfts n
    JOIN nft_collections c ON n.collection_id = c.id
    WHERE c.name LIKE '%Mutant%'
    ORDER BY n.id
    LIMIT 20;
  `;
  
  const result = await client.query(query);
  const nfts = result.rows;
  
  console.log(`üìä –ü–æ–ª—É—á–µ–Ω–æ ${nfts.length} NFT –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Mutant Ape`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
  let validCount = 0;
  let invalidCount = 0;
  
  console.log('üîé –ü—Ä–∏–º–µ—Ä—ã NFT –∏ –∏—Ö –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º:');
  nfts.forEach((nft, index) => {
    const imagePath = nft.image_path;
    const isMutantPath = imagePath && imagePath.includes('mutant_ape');
    
    if (isMutantPath) {
      validCount++;
      console.log(`‚úÖ ${index + 1}. ID: ${nft.id}, Token: ${nft.token_id}, –ü—É—Ç—å: ${imagePath}`);
    } else {
      invalidCount++;
      console.log(`‚ùå ${index + 1}. ID: ${nft.id}, Token: ${nft.token_id}, –ü—É—Ç—å: ${imagePath}`);
    }
  });
  
  console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${validCount} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—É—Ç–µ–π, ${invalidCount} –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—É—Ç–µ–π`);
  
  return nfts;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—É—Ç–µ–π –≤ –±–∞–∑–µ –∏ —Ñ–∞–π–ª–æ–≤ –Ω–∞ –¥–∏—Å–∫–µ
 */
async function checkPathsAndFiles(nfts, imageFiles) {
  console.log('üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—É—Ç–µ–π –∏ —Ñ–∞–π–ª–æ–≤...');
  
  const missingFiles = [];
  
  for (const nft of nfts) {
    if (!nft.image_path) {
      console.log(`‚ö†Ô∏è NFT ID ${nft.id} –Ω–µ –∏–º–µ–µ—Ç –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é`);
      continue;
    }
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ –ø—É—Ç–∏
    const fileName = path.basename(nft.image_path);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    const fileExists = imageFiles.includes(fileName);
    
    if (!fileExists) {
      console.log(`‚ùå –§–∞–π–ª ${fileName} –¥–ª—è NFT ID ${nft.id} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      missingFiles.push({
        id: nft.id,
        tokenId: nft.token_id,
        imagePath: nft.image_path,
        fileName
      });
    }
  }
  
  console.log(`üìä –ò—Ç–æ–≥: ${missingFiles.length} –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ ${nfts.length} NFT`);
  
  return missingFiles;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
 */
async function analyzeClientImageHandling() {
  console.log('üß™ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ...');
  
  // –ü—É—Ç—å –∫ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–º—É —Ñ–∞–π–ª—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  const imageFunctionPath = path.join(process.cwd(), 'client', 'src', 'lib', 'image-utils.ts');
  
  if (fs.existsSync(imageFunctionPath)) {
    console.log('‚úÖ –ù–∞—à–ª–∏ —Ñ–∞–π–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ');
    const content = fs.readFileSync(imageFunctionPath, 'utf8');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É Mutant Ape
    const hasMutantHandling = content.includes('mutant_ape');
    
    if (hasMutantHandling) {
      console.log('‚úÖ –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π –∫–æ–¥ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É Mutant Ape');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π
      const usesMutantApeCollection = content.match(/collectionType\s*=\s*isOfficial\s*\?\s*['"]official['"]\s*:\s*['"]regular['"]/);
      
      if (usesMutantApeCollection) {
        console.log('‚úÖ –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π –∫–æ–¥ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Mutant Ape');
      } else {
        console.log('‚ùå –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π –∫–æ–¥ –º–æ–∂–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ç–∏–ø –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Mutant Ape');
      }
    } else {
      console.log('‚ùå –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π –∫–æ–¥ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É Mutant Ape');
    }
  } else {
    console.log('‚ùå –§–∞–π–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
}

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
async function main() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Mutant Ape NFT...');
  
  try {
    const imageFiles = await checkImageAvailability();
    const nfts = await checkDatabaseImagePaths();
    const missingFiles = await checkPathsAndFiles(nfts, imageFiles);
    await analyzeClientImageHandling();
    
    // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    await client.end();
    
    console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error);
    
    try {
      // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
      await client.end();
    } catch (err) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
main().catch(console.error);
/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π Mutant Ape –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É—Ç–µ–π –≤ —Ñ–∞–π–ª–∞—Ö
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã
const MUTANT_APE_NFT_DIR = path.join(process.cwd(), 'mutant_ape_nft');
const NFT_ASSETS_MUTANT_APE_DIR = path.join(process.cwd(), 'nft_assets', 'mutant_ape');
const MUTANT_APE_OFFICIAL_DIR = path.join(process.cwd(), 'mutant_ape_official');

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
function ensureDirectories() {
  const directories = [
    MUTANT_APE_NFT_DIR,
    NFT_ASSETS_MUTANT_APE_DIR,
    MUTANT_APE_OFFICIAL_DIR,
  ];
  
  for (const dir of directories) {
    if (!fs.existsSync(dir)) {
      console.log(`üîß –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é ${dir}`);
      fs.mkdirSync(dir, { recursive: true });
    }
  }
}

/**
 * –ö–æ–ø–∏—Ä—É–µ—Ç —Ñ–∞–π–ª –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ —Ü–µ–ª–µ–≤—É—é
 */
function copyImageFile(sourcePath, destPath) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    if (!fs.existsSync(sourcePath)) {
      console.log(`‚ö†Ô∏è –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${sourcePath}`);
      return false;
    }
    
    // –°–æ–∑–¥–∞–µ–º —Ü–µ–ª–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const destDir = path.dirname(destPath);
    if (!fs.existsSync(destDir)) {
      fs.mkdirSync(destDir, { recursive: true });
    }
    
    // –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª
    fs.copyFileSync(sourcePath, destPath);
    console.log(`‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Ñ–∞–π–ª: ${path.basename(sourcePath)} -> ${path.basename(destPath)}`);
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞: ${error.message}`);
    return false;
  }
}

/**
 * –°–æ–±–∏—Ä–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö Mutant Ape –≤ —Å–∏—Å—Ç–µ–º–µ
 */
function collectAllMutantApeImages() {
  console.log('üîç –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö Mutant Ape...');
  
  const result = {
    nftAssetsDir: {
      png: [],
      svg: []
    },
    nftDir: {
      files: []
    },
    officialDir: {
      files: []
    }
  };
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é nft_assets/mutant_ape
  if (fs.existsSync(NFT_ASSETS_MUTANT_APE_DIR)) {
    try {
      const files = fs.readdirSync(NFT_ASSETS_MUTANT_APE_DIR);
      result.nftAssetsDir.png = files.filter(f => f.endsWith('.png'));
      result.nftAssetsDir.svg = files.filter(f => f.endsWith('.svg'));
      
      console.log(`üìä –í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ nft_assets/mutant_ape –Ω–∞–π–¥–µ–Ω–æ ${result.nftAssetsDir.png.length} PNG –∏ ${result.nftAssetsDir.svg.length} SVG —Ñ–∞–π–ª–æ–≤`);
    } catch (err) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${NFT_ASSETS_MUTANT_APE_DIR}:`, err);
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é mutant_ape_nft
  if (fs.existsSync(MUTANT_APE_NFT_DIR)) {
    try {
      const files = fs.readdirSync(MUTANT_APE_NFT_DIR);
      result.nftDir.files = files.filter(f => f.endsWith('.png'));
      
      console.log(`üìä –í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ mutant_ape_nft –Ω–∞–π–¥–µ–Ω–æ ${result.nftDir.files.length} PNG —Ñ–∞–π–ª–æ–≤`);
    } catch (err) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${MUTANT_APE_NFT_DIR}:`, err);
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é mutant_ape_official
  if (fs.existsSync(MUTANT_APE_OFFICIAL_DIR)) {
    try {
      const files = fs.readdirSync(MUTANT_APE_OFFICIAL_DIR);
      result.officialDir.files = files.filter(f => f.endsWith('.png'));
      
      console.log(`üìä –í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ mutant_ape_official –Ω–∞–π–¥–µ–Ω–æ ${result.officialDir.files.length} PNG —Ñ–∞–π–ª–æ–≤`);
    } catch (err) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${MUTANT_APE_OFFICIAL_DIR}:`, err);
    }
  }
  
  return result;
}

/**
 * –ò–∑–≤–ª–µ–∫–∞–µ—Ç –Ω–æ–º–µ—Ä —Ç–æ–∫–µ–Ω–∞ –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
 */
function extractTokenIdFromFilename(filename) {
  const match = filename.match(/mutant_ape_(\d+)\.png/);
  if (match && match[1]) {
    return parseInt(match[1]);
  }
  return null;
}

/**
 * –ö–æ–ø–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–∂–¥—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º–∏ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞
 */
function copyMissingMutantApeImages(imageData) {
  console.log('üîÑ –ö–æ–ø–∏—Ä—É–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è Mutant Ape...');
  
  // –ö–æ–ø–∏—Ä—É–µ–º PNG –∏–∑ nft_assets/mutant_ape –≤ mutant_ape_nft, –µ—Å–ª–∏ –æ–Ω–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
  let copiedCount = 0;
  
  // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–∫–µ–Ω ID –∏–∑ –∫–∞–∂–¥–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  const nftAssetsTokenIds = imageData.nftAssetsDir.png.map(file => extractTokenIdFromFilename(file)).filter(id => id !== null);
  const nftDirTokenIds = imageData.nftDir.files.map(file => extractTokenIdFromFilename(file)).filter(id => id !== null);
  
  console.log(`üî¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤ –≤ nft_assets/mutant_ape: ${new Set(nftAssetsTokenIds).size}`);
  console.log(`üî¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤ –≤ mutant_ape_nft: ${new Set(nftDirTokenIds).size}`);
  
  // –ù–∞—Ö–æ–¥–∏–º —Ç–æ–∫–µ–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ nft_assets/mutant_ape, –Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ mutant_ape_nft
  const missingInNftDir = nftAssetsTokenIds.filter(id => !nftDirTokenIds.includes(id));
  console.log(`üîç –¢–æ–∫–µ–Ω—ã, –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –≤ mutant_ape_nft: ${missingInNftDir.length}`);
  
  // –ö–æ–ø–∏—Ä—É–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  for (const tokenId of missingInNftDir) {
    const sourceFile = path.join(NFT_ASSETS_MUTANT_APE_DIR, `mutant_ape_${tokenId}.png`);
    const destFile = path.join(MUTANT_APE_NFT_DIR, `mutant_ape_${tokenId}.png`);
    
    if (fs.existsSync(sourceFile) && !fs.existsSync(destFile)) {
      if (copyImageFile(sourceFile, destFile)) {
        copiedCount++;
      }
    }
  }
  
  console.log(`‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ ${copiedCount} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ nft_assets/mutant_ape –≤ mutant_ape_nft`);
  
  // –¢–µ–ø–µ—Ä—å –∫–æ–ø–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ mutant_ape_nft, –Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ nft_assets/mutant_ape
  copiedCount = 0;
  const missingInNftAssets = nftDirTokenIds.filter(id => !nftAssetsTokenIds.includes(id));
  console.log(`üîç –¢–æ–∫–µ–Ω—ã, –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –≤ nft_assets/mutant_ape: ${missingInNftAssets.length}`);
  
  for (const tokenId of missingInNftAssets) {
    const sourceFile = path.join(MUTANT_APE_NFT_DIR, `mutant_ape_${tokenId}.png`);
    const destFile = path.join(NFT_ASSETS_MUTANT_APE_DIR, `mutant_ape_${tokenId}.png`);
    
    if (fs.existsSync(sourceFile) && !fs.existsSync(destFile)) {
      if (copyImageFile(sourceFile, destFile)) {
        copiedCount++;
      }
    }
  }
  
  console.log(`‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ ${copiedCount} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ mutant_ape_nft –≤ nft_assets/mutant_ape`);
  
  return { 
    copiedToNftDir: copiedCount,
    copiedToNftAssets: copiedCount
  };
}

/**
 * –°–æ–∑–¥–∞–µ—Ç nft-server-port.txt –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –ø–æ—Ä—Ç–∞ NFT —Å–µ—Ä–≤–µ—Ä–∞
 */
function createNFTServerPortFile() {
  console.log('üîß –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –ø–æ—Ä—Ç–æ–º NFT —Å–µ—Ä–≤–µ—Ä–∞...');
  
  const portFile = path.join(process.cwd(), 'nft-server-port.txt');
  const port = 8081; // –ü–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  
  try {
    fs.writeFileSync(portFile, port.toString(), 'utf8');
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª ${portFile} —Å –ø–æ—Ä—Ç–æ–º ${port}`);
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ ${portFile}:`, error);
    return false;
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞
 */
function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π Mutant Ape...');
  
  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  ensureDirectories();
  
  // –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö
  const imageData = collectAllMutantApeImages();
  
  // –ö–æ–ø–∏—Ä—É–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  copyMissingMutantApeImages(imageData);
  
  // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –ø–æ—Ä—Ç–æ–º NFT —Å–µ—Ä–≤–µ—Ä–∞
  createNFTServerPortFile();
  
  console.log('‚úÖ –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω—ã');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
main();
/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ NFT-—Å–µ—Ä–≤–µ—Ä–∞
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞ –∏ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import http from 'http';

// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ü–æ—Ä—Ç NFT —Å–µ—Ä–≤–µ—Ä–∞ (—á–∏—Ç–∞–µ–º –∏–∑ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏)
const NFT_SERVER_PORT_FILE = path.join(__dirname, 'nft-server-port.txt');
let NFT_SERVER_PORT = 8081; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é

// –ß–∏—Ç–∞–µ–º –ø–æ—Ä—Ç –∏–∑ —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if (fs.existsSync(NFT_SERVER_PORT_FILE)) {
  try {
    const portStr = fs.readFileSync(NFT_SERVER_PORT_FILE, 'utf8').trim();
    const port = parseInt(portStr, 10);
    if (!isNaN(port) && port > 1024 && port < 65535) {
      NFT_SERVER_PORT = port;
      console.log(`üí° –ó–∞–≥—Ä—É–∂–µ–Ω –ø–æ—Ä—Ç NFT —Å–µ—Ä–≤–µ—Ä–∞ –∏–∑ —Ñ–∞–π–ª–∞: ${NFT_SERVER_PORT}`);
    } else {
      console.log(`‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–æ—Ä—Ç –≤ —Ñ–∞–π–ª–µ: ${portStr}, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: ${NFT_SERVER_PORT}`);
    }
  } catch (err) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ø–æ—Ä—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞: ${err.message}`);
  }
} else {
  console.log(`‚ÑπÔ∏è –§–∞–π–ª —Å –ø–æ—Ä—Ç–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: ${NFT_SERVER_PORT}`);
}

// –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ NFT
const DIRECTORIES = {
  'bored_ape_nft': path.join(process.cwd(), 'bored_ape_nft'),
  'mutant_ape_nft': path.join(process.cwd(), 'mutant_ape_nft'),
  'mutant_ape_official': path.join(process.cwd(), 'mutant_ape_official'),
  'nft_assets/mutant_ape': path.join(process.cwd(), 'nft_assets', 'mutant_ape')
};

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å NFT —Å–µ—Ä–≤–µ—Ä–∞
function checkServerAvailability() {
  console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ NFT —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É ${NFT_SERVER_PORT}...`);
  
  return new Promise((resolve, reject) => {
    const req = http.request({
      host: 'localhost',
      port: NFT_SERVER_PORT,
      path: '/status',
      method: 'GET',
      timeout: 3000
    }, (res) => {
      let data = '';
      res.on('data', (chunk) => {
        data += chunk;
      });
      res.on('end', () => {
        if (res.statusCode === 200) {
          try {
            const status = JSON.parse(data);
            console.log(`‚úÖ NFT —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ: ${status.message}`);
            resolve(status);
          } catch (err) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ –æ—Ç–≤–µ—Ç–∞: ${err.message}`);
            reject(err);
          }
        } else {
          console.error(`‚ùå –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: ${res.statusCode}`);
          reject(new Error(`Server responded with status code ${res.statusCode}`));
        }
      });
    });
    
    req.on('error', (err) => {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ NFT —Å–µ—Ä–≤–µ—Ä—É: ${err.message}`);
      reject(err);
    });
    
    req.on('timeout', () => {
      console.error(`‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ NFT —Å–µ—Ä–≤–µ—Ä—É`);
      req.destroy();
      reject(new Error('Request timed out'));
    });
    
    req.end();
  });
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö
function checkDirectories() {
  console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ NFT...`);
  
  const stats = {};
  let totalFiles = 0;
  let totalPNG = 0;
  let totalSVG = 0;
  
  for (const [dirName, dirPath] of Object.entries(DIRECTORIES)) {
    if (fs.existsSync(dirPath)) {
      try {
        const files = fs.readdirSync(dirPath);
        const pngFiles = files.filter(f => f.endsWith('.png'));
        const svgFiles = files.filter(f => f.endsWith('.svg'));
        
        stats[dirName] = {
          total: files.length,
          png: pngFiles.length,
          svg: svgFiles.length
        };
        
        totalFiles += files.length;
        totalPNG += pngFiles.length;
        totalSVG += svgFiles.length;
        
        console.log(`üìÇ ${dirName}: ${files.length} —Ñ–∞–π–ª–æ–≤ (${pngFiles.length} PNG, ${svgFiles.length} SVG)`);
      } catch (err) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${dirName}: ${err.message}`);
        stats[dirName] = { error: err.message };
      }
    } else {
      console.warn(`‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: ${dirName} (${dirPath})`);
      stats[dirName] = { error: 'Directory not found' };
    }
  }
  
  console.log(`üìä –ò—Ç–æ–≥–æ: ${totalFiles} —Ñ–∞–π–ª–æ–≤ (${totalPNG} PNG, ${totalSVG} SVG)`);
  return stats;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
async function checkSampleImage() {
  console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...`);
  
  // –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ mutant_ape_nft –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
  const mutantApeDir = DIRECTORIES['mutant_ape_nft'];
  if (!fs.existsSync(mutantApeDir)) {
    console.error(`‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è mutant_ape_nft –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
    return false;
  }
  
  try {
    const files = fs.readdirSync(mutantApeDir);
    const pngFiles = files.filter(f => f.endsWith('.png'));
    
    if (pngFiles.length === 0) {
      console.error(`‚ùå –í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ mutant_ape_nft –Ω–µ—Ç PNG —Ñ–∞–π–ª–æ–≤`);
      return false;
    }
    
    const sampleFile = pngFiles[0];
    const sampleUrl = `http://localhost:${NFT_SERVER_PORT}/mutant_ape_nft/${sampleFile}`;
    
    console.log(`üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É: ${sampleUrl}`);
    
    return new Promise((resolve, reject) => {
      const req = http.request({
        host: 'localhost',
        port: NFT_SERVER_PORT,
        path: `/mutant_ape_nft/${sampleFile}`,
        method: 'GET',
        timeout: 3000
      }, (res) => {
        const chunks = [];
        res.on('data', (chunk) => {
          chunks.push(chunk);
        });
        res.on('end', () => {
          if (res.statusCode === 200) {
            const contentType = res.headers['content-type'];
            console.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ: ${sampleFile} (${contentType})`);
            resolve(true);
          } else {
            console.error(`‚ùå –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: ${res.statusCode}`);
            resolve(false);
          }
        });
      });
      
      req.on('error', (err) => {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é: ${err.message}`);
        resolve(false);
      });
      
      req.on('timeout', () => {
        console.error(`‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é`);
        req.destroy();
        resolve(false);
      });
      
      req.end();
    });
  } catch (err) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${err.message}`);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏
async function checkNFTServer() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ NFT —Å–µ—Ä–≤–µ—Ä–∞...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    const dirStats = checkDirectories();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    try {
      const serverStatus = await checkServerAvailability();
      console.log(`üì° –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞: ${JSON.stringify(serverStatus, null, 2)}`);
    } catch (err) {
      console.error(`‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${err.message}`);
      console.log(`üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –∫–æ–º–∞–Ω–¥–æ–π: node start-nft-server.js`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const imageAvailable = await checkSampleImage();
    
    // –í—ã–≤–æ–¥–∏–º –æ–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüìã –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:');
    if (imageAvailable) {
      console.log('‚úÖ NFT —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã');
    } else {
      console.log('‚ö†Ô∏è NFT —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º');
    }
  } catch (err) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: ${err.message}`);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkNFTServer();
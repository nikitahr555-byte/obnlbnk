/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É—Ç–µ–π –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º NFT –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 * –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –≤—Å–µ –ø—É—Ç–∏ —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã
 */

import { neon } from '@neondatabase/serverless';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const DATABASE_URL = process.env.DATABASE_URL;
if (!DATABASE_URL) {
  console.error('‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  process.exit(1);
}

// –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const sql = neon(DATABASE_URL);

// –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã
const MUTANT_APE_NFT_DIR = path.join(process.cwd(), 'mutant_ape_nft');
const BORED_APE_NFT_DIR = path.join(process.cwd(), 'bored_ape_nft');

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–±–æ –≤—Å–µ—Ö NFT –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 */
async function getAllNFTFromDB() {
  try {
    console.log('üîç –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö NFT –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    const collections = await sql`
      SELECT id, name FROM nft_collections
    `;
    
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${collections.length} –∫–æ–ª–ª–µ–∫—Ü–∏–π NFT:`);
    for (const collection of collections) {
      console.log(`  - ${collection.name} (ID: ${collection.id})`);
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö NFT
    const nfts = await sql`
      SELECT 
        n.id, 
        n.token_id, 
        n.name, 
        n.image_path, 
        c.name as collection_name
      FROM nfts n
      JOIN nft_collections c ON n.collection_id = c.id
    `;
    
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${nfts.length} NFT –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º NFT –ø–æ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º
    const nftsByCollection = {};
    
    for (const nft of nfts) {
      const collectionName = nft.collection_name;
      
      if (!nftsByCollection[collectionName]) {
        nftsByCollection[collectionName] = [];
      }
      
      nftsByCollection[collectionName].push(nft);
    }
    
    // –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞–∂–¥–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    for (const [collectionName, collectionNfts] of Object.entries(nftsByCollection)) {
      console.log(`üìä –ö–æ–ª–ª–µ–∫—Ü–∏—è "${collectionName}": ${collectionNfts.length} NFT`);
    }
    
    return {
      collections,
      nfts,
      nftsByCollection
    };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã:', error);
    return null;
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º Bored Ape NFT
 */
async function fixBoredApeImagePaths(nfts) {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º Bored Ape NFT...');
  
  let fixedCount = 0;
  const boredApeNfts = nfts.filter(nft => 
    nft.collection_name.toLowerCase().includes('bored') || 
    nft.collection_name.toLowerCase().includes('bayc')
  );
  
  console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${boredApeNfts.length} Bored Ape NFT –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏`);
  
  for (const nft of boredApeNfts) {
    const tokenId = nft.token_id;
    const currentPath = nft.image_path;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    const fullPath = path.join(process.cwd(), currentPath);
    const fileExists = fs.existsSync(fullPath);
    
    if (!fileExists) {
      console.log(`‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${fullPath}`);
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø—É—Ç—å
      const newPath = `/bored_ape_nft/bored_ape_${tokenId}.png`;
      const newFullPath = path.join(process.cwd(), newPath);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ –Ω–æ–≤–æ–º—É –ø—É—Ç–∏
      const newFileExists = fs.existsSync(newFullPath);
      
      if (newFileExists) {
        // –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ –Ω–æ–≤–æ–º—É –ø—É—Ç–∏, –æ–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç—å –≤ –±–∞–∑–µ
        console.log(`üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç—å –¥–ª—è Bored Ape #${tokenId}: ${currentPath} -> ${newPath}`);
        
        await sql`
          UPDATE nfts 
          SET image_path = ${newPath}
          WHERE id = ${nft.id}
        `;
        
        fixedCount++;
      } else {
        console.log(`‚ùå –§–∞–π–ª —Ç–∞–∫–∂–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏ ${newFullPath}`);
      }
    }
  }
  
  console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ ${fixedCount} –ø—É—Ç–µ–π –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º Bored Ape –∏–∑ ${boredApeNfts.length}`);
  return fixedCount;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º Mutant Ape NFT
 */
async function fixMutantApeImagePaths(nfts) {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º Mutant Ape NFT...');
  
  let fixedCount = 0;
  const mutantApeNfts = nfts.filter(nft => 
    nft.collection_name.toLowerCase().includes('mutant') || 
    nft.collection_name.toLowerCase().includes('mayc')
  );
  
  console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${mutantApeNfts.length} Mutant Ape NFT –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏`);
  
  for (const nft of mutantApeNfts) {
    const tokenId = nft.token_id;
    const currentPath = nft.image_path;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    const fullPath = path.join(process.cwd(), currentPath);
    const fileExists = fs.existsSync(fullPath);
    
    if (!fileExists) {
      console.log(`‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${fullPath}`);
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø—É—Ç—å (–ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã)
      const possiblePaths = [
        `/mutant_ape_nft/mutant_ape_${tokenId}.png`, // –û—Å–Ω–æ–≤–Ω–æ–π –ø—É—Ç—å
        `/nft_assets/mutant_ape/mutant_ape_${tokenId}.png`, // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø—É—Ç—å
        `/mutant_ape_official/mutant_ape_${tokenId}.png` // –ü—É—Ç—å –¥–ª—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      ];
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Ç–∏
      let foundPath = null;
      
      for (const newPath of possiblePaths) {
        const newFullPath = path.join(process.cwd(), newPath);
        if (fs.existsSync(newFullPath)) {
          foundPath = newPath;
          break;
        }
      }
      
      if (foundPath) {
        // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø—É—Ç—å, –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ
        console.log(`üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç—å –¥–ª—è Mutant Ape #${tokenId}: ${currentPath} -> ${foundPath}`);
        
        await sql`
          UPDATE nfts 
          SET image_path = ${foundPath}
          WHERE id = ${nft.id}
        `;
        
        fixedCount++;
      } else {
        console.log(`‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è Mutant Ape #${tokenId}`);
      }
    }
  }
  
  console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ ${fixedCount} –ø—É—Ç–µ–π –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º Mutant Ape –∏–∑ ${mutantApeNfts.length}`);
  return fixedCount;
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞
 */
async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—É—Ç–µ–π –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º NFT...');
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  const dbData = await getAllNFTFromDB();
  
  if (!dbData) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
    process.exit(1);
  }
  
  // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º Bored Ape
  const fixedBoredApe = await fixBoredApeImagePaths(dbData.nfts);
  
  // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º Mutant Ape
  const fixedMutantApe = await fixMutantApeImagePaths(dbData.nfts);
  
  console.log('‚úÖ –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω—ã');
  console.log(`üìä –ò—Ç–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—É—Ç–µ–π: ${fixedBoredApe + fixedMutantApe}`);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main().catch(err => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞:', err);
  process.exit(1);
});
/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É—Ç–µ–π –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º Mutant Ape
 * –í–∫–ª—é—á–∞–µ—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É, –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 */

import { neon } from '@neondatabase/serverless';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import http from 'http';

// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const DATABASE_URL = process.env.DATABASE_URL;
if (!DATABASE_URL) {
  console.error('‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  process.exit(1);
}

// –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const sql = neon(DATABASE_URL);

// –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã
const MUTANT_APE_OFFICIAL_DIR = path.join(process.cwd(), 'mutant_ape_official');
const MUTANT_APE_NFT_DIR = path.join(process.cwd(), 'mutant_ape_nft');
const NFT_ASSETS_MUTANT_APE_DIR = path.join(process.cwd(), 'nft_assets', 'mutant_ape');

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
function ensureDirectories() {
  const directories = [
    MUTANT_APE_OFFICIAL_DIR,
    MUTANT_APE_NFT_DIR,
    NFT_ASSETS_MUTANT_APE_DIR,
  ];
  
  for (const dir of directories) {
    if (!fs.existsSync(dir)) {
      console.log(`üîß –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é ${dir}`);
      fs.mkdirSync(dir, { recursive: true });
    }
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ NFT –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∫–æ–ø–∏—Ä—É–µ—Ç —Ñ–∞–π–ª –∏–∑ –¥—Ä—É–≥–æ–≥–æ –º–µ—Å—Ç–∞
 */
async function ensureNFTFileExists(filepath, collectionType) {
  // –£–¥–æ—Å—Ç–æ–≤–µ—Ä—è–µ–º—Å—è, —á—Ç–æ –ø—É—Ç—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å /
  if (!filepath.startsWith('/')) {
    filepath = '/' + filepath;
  }
  
  // –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
  const fullPath = path.join(process.cwd(), filepath);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
  if (fs.existsSync(fullPath)) {
    return true; // –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  }
  
  // –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –µ–≥–æ –≤ –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç–∞—Ö
  console.log(`‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${fullPath}`);
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏ —Ç–æ–∫–µ–Ω ID
  const filename = path.basename(filepath);
  const match = filename.match(/mutant_ape_(\d+)\.png/);
  let tokenId = 0;
  
  if (match && match[1]) {
    tokenId = parseInt(match[1]);
  } else {
    console.error(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID —Ç–æ–∫–µ–Ω–∞ –∏–∑ ${filename}`);
    return false;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ –≤ –¥—Ä—É–≥–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö
  let sourcePath = null;
  let sourceFile = null;
  
  // –ú–∞—Å—Å–∏–≤ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞
  const possibleSources = [];
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º mutant_ape_nft
  const mutantApeFile = path.join(MUTANT_APE_NFT_DIR, filename);
  if (fs.existsSync(mutantApeFile)) {
    possibleSources.push({ path: mutantApeFile, source: 'mutant_ape_nft' });
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º mutant_ape_official
  const officialFile = path.join(MUTANT_APE_OFFICIAL_DIR, filename);
  if (fs.existsSync(officialFile)) {
    possibleSources.push({ path: officialFile, source: 'mutant_ape_official' });
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º nft_assets/mutant_ape
  const nftAssetsFile = path.join(NFT_ASSETS_MUTANT_APE_DIR, filename);
  if (fs.existsSync(nftAssetsFile)) {
    possibleSources.push({ path: nftAssetsFile, source: 'nft_assets/mutant_ape' });
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º SVG —Ñ–∞–π–ª –≤ nft_assets/mutant_ape
  const svgFile = path.join(NFT_ASSETS_MUTANT_APE_DIR, filename.replace('.png', '.svg'));
  if (fs.existsSync(svgFile)) {
    possibleSources.push({ path: svgFile, source: 'nft_assets/mutant_ape (SVG)' });
  }
  
  // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã –≤–æ–∑–º–æ–∂–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –≤—ã–±–∏—Ä–∞–µ–º –ª—É—á—à–∏–π
  if (possibleSources.length > 0) {
    // –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º PNG –≤–º–µ—Å—Ç–æ SVG
    const pngSources = possibleSources.filter(src => !src.path.endsWith('.svg'));
    if (pngSources.length > 0) {
      sourcePath = pngSources[0].path;
      sourceFile = pngSources[0].source;
    } else {
      // –ï—Å–ª–∏ –Ω–µ—Ç PNG, –±–µ—Ä–µ–º SVG (–≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –Ω—É–∂–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å, –Ω–æ —ç—Ç–æ –æ–ø—É—Å–∫–∞–µ–º –≤ —ç—Ç–æ–º —Å–∫—Ä–∏–ø—Ç–µ)
      sourcePath = possibleSources[0].path;
      sourceFile = possibleSources[0].source;
    }
    
    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const destDir = path.dirname(fullPath);
    if (!fs.existsSync(destDir)) {
      fs.mkdirSync(destDir, { recursive: true });
    }
    
    try {
      // –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª
      fs.copyFileSync(sourcePath, fullPath);
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–æ–ø–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${filename} (–∏–∑ ${sourceFile})`);
      return true;
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ –¥–ª—è ${filename}:`, error);
    }
  } else {
    console.error(`‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–ª—è ${filename}`);
  }
  
  return false;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ NFT –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Mutant Ape Yacht Club –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
 */
async function fixMutantApeImagePaths() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º NFT –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Mutant Ape Yacht Club...');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Mutant Ape
    const collections = await sql`
      SELECT id, name FROM nft_collections 
      WHERE name ILIKE '%Mutant Ape%' OR name ILIKE '%MAYC%'
    `;
    
    if (!collections || collections.length === 0) {
      console.error('‚ùå –ö–æ–ª–ª–µ–∫—Ü–∏—è Mutant Ape –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      return 0;
    }
    
    const mutantApeCollection = collections[0];
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–æ–ª–ª–µ–∫—Ü–∏—è: ${mutantApeCollection.name} (ID: ${mutantApeCollection.id})`);
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ NFT –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Mutant Ape Yacht Club
    const nfts = await sql`
      SELECT id, token_id, name, image_path 
      FROM nfts 
      WHERE collection_id = ${mutantApeCollection.id}
    `;
    
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${nfts.length} NFT –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Mutant Ape Yacht Club`);
    
    // –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö NFT
    let updatedCount = 0;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
    for (const nft of nfts) {
      console.log(`üßê –ü—Ä–æ–≤–µ—Ä—è–µ–º NFT #${nft.token_id}: ${nft.name} (ID: ${nft.id})`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
      const imagePath = nft.image_path;
      console.log(`üîç –¢–µ–∫—É—â–∏–π –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é: ${imagePath}`);
      
      // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      const fileExists = await ensureNFTFileExists(imagePath, 'mutant');
      
      if (!fileExists) {
        console.log(`‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${imagePath}. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø—É—Ç—å...`);
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ token_id
        const newImagePath = `/mutant_ape_nft/mutant_ape_${nft.token_id}.png`;
        console.log(`üîÑ –ù–æ–≤—ã–π –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é: ${newImagePath}`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        await sql`
          UPDATE nfts 
          SET image_path = ${newImagePath}
          WHERE id = ${nft.id}
        `;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç—å –≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
        await sql`
          UPDATE nfts 
          SET metadata = jsonb_set(
            CASE WHEN metadata IS NULL THEN '{}' ELSE metadata END,
            '{image}',
            to_jsonb(${newImagePath}::text)
          )
          WHERE id = ${nft.id}
        `;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ –ø–æ –Ω–æ–≤–æ–º—É –ø—É—Ç–∏ –∏ –∫–æ–ø–∏—Ä—É–µ–º –µ–≥–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        await ensureNFTFileExists(newImagePath, 'mutant');
        
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –ø—É—Ç—å –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è NFT #${nft.token_id}`);
        updatedCount++;
      }
    }
    
    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedCount} –ø—É—Ç–µ–π –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –∏–∑ ${nfts.length} NFT`);
    
    return updatedCount;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—É—Ç–µ–π –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º:', error);
    return 0;
  }
}

/**
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—É—Ç–∏ –≤ –º–æ–¥—É–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
 */
async function fixClientImageHandling() {
  console.log('üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ...');
  
  // –ü—É—Ç—å –∫ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–º—É —Ñ–∞–π–ª—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  const imageFunctionPath = path.join(process.cwd(), 'client', 'src', 'lib', 'image-utils.ts');
  
  if (fs.existsSync(imageFunctionPath)) {
    // –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
    const content = fs.readFileSync(imageFunctionPath, 'utf8');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Mutant Ape
    if (!content.includes('mutant_ape_nft')) {
      console.log('‚ö†Ô∏è –§–∞–π–ª image-utils.ts –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É mutant_ape_nft');
    } else {
      console.log('‚úÖ –§–∞–π–ª image-utils.ts —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É mutant_ape_nft');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º DEBUG_MODE (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏)
    if (!content.includes('DEBUG_MODE = true')) {
      console.log('‚ö†Ô∏è DEBUG_MODE –Ω–µ –≤–∫–ª—é—á–µ–Ω –≤ image-utils.ts');
      
      // –í–∫–ª—é—á–∞–µ–º DEBUG_MODE
      const updatedContent = content.replace(/DEBUG_MODE\s*=\s*false/, 'DEBUG_MODE = true');
      fs.writeFileSync(imageFunctionPath, updatedContent, 'utf8');
      console.log('‚úÖ DEBUG_MODE –≤–∫–ª—é—á–µ–Ω –≤ image-utils.ts');
    } else {
      console.log('‚úÖ DEBUG_MODE –≤–∫–ª—é—á–µ–Ω –≤ image-utils.ts');
    }
  } else {
    console.error(`‚ùå –§–∞–π–ª ${imageFunctionPath} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É NFT —Å–µ—Ä–≤–µ—Ä–∞
 */
async function checkNFTServer() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É NFT —Å–µ—Ä–≤–µ—Ä–∞...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ —Å –ø–æ—Ä—Ç–æ–º NFT —Å–µ—Ä–≤–µ—Ä–∞
  const portFile = path.join(process.cwd(), 'nft-server-port.txt');
  let nftServerPort = 8081; // –ø–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  
  if (fs.existsSync(portFile)) {
    try {
      const portData = fs.readFileSync(portFile, 'utf8').trim();
      const port = parseInt(portData);
      if (!isNaN(port) && port > 0) {
        nftServerPort = port;
      }
    } catch (err) {
      console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ø–æ—Ä—Ç–∞ NFT —Å–µ—Ä–≤–µ—Ä–∞:', err);
    }
  }
  
  console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º NFT —Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É ${nftServerPort}...`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å NFT —Å–µ—Ä–≤–µ—Ä–∞
  return new Promise((resolve) => {
    const req = http.request({
      hostname: 'localhost',
      port: nftServerPort,
      path: '/status',
      method: 'GET'
    }, (res) => {
      let data = '';
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        console.log(`‚úÖ NFT —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É ${nftServerPort}. –°—Ç–∞—Ç—É—Å: ${res.statusCode}`);
        resolve(true);
      });
    });
    
    req.on('error', (err) => {
      console.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ NFT —Å–µ—Ä–≤–µ—Ä—É –Ω–∞ –ø–æ—Ä—Ç—É ${nftServerPort}:`, err.message);
      resolve(false);
    });
    
    req.end();
  });
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑ SVG —Ñ–∞–π–ª–æ–≤ PNG
 * –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –∑–∞–ø—É—Å–∫ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞
 */
async function checkConvertedImages() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã—Ö PNG —Ñ–∞–π–ª–æ–≤ –∏–∑ SVG...');
  
  const nftAssetsMutantDir = NFT_ASSETS_MUTANT_APE_DIR;
  
  if (!fs.existsSync(nftAssetsMutantDir)) {
    console.error(`‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${nftAssetsMutantDir} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
    return false;
  }
  
  // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ PNG –∏ SVG –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  let pngCount = 0;
  let svgCount = 0;
  
  try {
    const files = fs.readdirSync(nftAssetsMutantDir);
    pngCount = files.filter(f => f.endsWith('.png')).length;
    svgCount = files.filter(f => f.endsWith('.svg')).length;
    
    console.log(`üìä –í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${nftAssetsMutantDir} –Ω–∞–π–¥–µ–Ω–æ ${pngCount} PNG —Ñ–∞–π–ª–æ–≤ –∏ ${svgCount} SVG —Ñ–∞–π–ª–æ–≤`);
    
    // –ï—Å–ª–∏ PNG —Ñ–∞–π–ª–æ–≤ –º–µ–Ω—å—à–µ —á–µ–º SVG, –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä
    if (pngCount < svgCount) {
      console.log(`‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ –º–µ–Ω—å—à–µ PNG (${pngCount}) —á–µ–º SVG (${svgCount}). –í–æ–∑–º–æ–∂–Ω–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è.`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
      const converterScript = path.join(process.cwd(), 'convert-nft-assets-svg-to-png.js');
      if (fs.existsSync(converterScript)) {
        console.log(`‚ÑπÔ∏è –°–∫—Ä–∏–ø—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ ${converterScript} –Ω–∞–π–¥–µ–Ω`);
        console.log(`‚ÑπÔ∏è –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: node convert-nft-assets-svg-to-png.js`);
      } else {
        console.error(`‚ùå –°–∫—Ä–∏–ø—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ ${converterScript} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      }
      
      return false;
    }
    
    return true;
  } catch (err) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${nftAssetsMutantDir}:`, err);
    return false;
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
 */
async function main() {
  console.log('üöÄ –ù–∞—á–∞–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π Mutant Ape...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  ensureDirectories();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã—Ö PNG —Ñ–∞–π–ª–æ–≤
  await checkConvertedImages();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É NFT —Å–µ—Ä–≤–µ—Ä–∞
  const nftServerRunning = await checkNFTServer();
  
  if (!nftServerRunning) {
    console.log('‚ö†Ô∏è NFT —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.');
  }
  
  // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
  const updatedCount = await fixMutantApeImagePaths();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
  await fixClientImageHandling();
  
  console.log(`‚úÖ –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π Mutant Ape –∑–∞–≤–µ—Ä—à–µ–Ω—ã. –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedCount} NFT.`);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main().catch(err => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞:', err);
  process.exit(1);
});
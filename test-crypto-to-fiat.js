/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –º–µ–∂–¥—É –∫—Ä–∏–ø—Ç–æ–∫–∞—Ä—Ç–æ–π –∏ —Ñ–∏–∞—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ–π
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–≤
 */

import { db } from './server/db.js';
import { storage } from './server/storage.js';
import { eq } from 'drizzle-orm';
import { cards, users, transactions } from './shared/schema.js';

async function testTransfers() {
  try {
    console.log("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –º–µ–∂–¥—É –∫—Ä–∏–ø—Ç–æ–∫–∞—Ä—Ç–æ–π –∏ —Ñ–∏–∞—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ–π...");
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞
    const rates = await storage.getLatestExchangeRates();
    if (!rates) {
      throw new Error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è");
    }
    
    console.log(`‚ÑπÔ∏è –¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞:
    - BTC ‚Üí USD: 1 BTC = $${rates.btcToUsd}
    - ETH ‚Üí USD: 1 ETH = $${rates.ethToUsd}
    - USD ‚Üí UAH: 1 USD = ${rates.usdToUah} UAH`);
    
    // –ü–æ–ª—É—á–∞–µ–º –∫—Ä–∏–ø—Ç–æ–∫–∞—Ä—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID=5 –µ—Å—Ç—å –∫—Ä–∏–ø—Ç–æ–∫–∞—Ä—Ç–∞
    const userCards = await storage.getCardsByUserId(5);
    if (!userCards || userCards.length === 0) {
      throw new Error("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –∫–∞—Ä—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID=5");
    }
    
    const cryptoCard = userCards.find(card => card.type === 'crypto' || card.type === 'btc');
    const usdCard = userCards.find(card => card.type === 'usd');
    const uahCard = userCards.find(card => card.type === 'uah');
    
    if (!cryptoCard) {
      throw new Error("‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∫—Ä–∏–ø—Ç–æ–∫–∞—Ä—Ç—ã");
    }
    
    if (!usdCard) {
      throw new Error("‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç USD –∫–∞—Ä—Ç—ã");
    }
    
    if (!uahCard) {
      throw new Error("‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç UAH –∫–∞—Ä—Ç—ã");
    }
    
    console.log(`‚ÑπÔ∏è –ù–∞–π–¥–µ–Ω—ã –∫–∞—Ä—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
    - –ö—Ä–∏–ø—Ç–æ–∫–∞—Ä—Ç–∞: ${cryptoCard.number} (BTC –±–∞–ª–∞–Ω—Å: ${cryptoCard.btcBalance})
    - USD –∫–∞—Ä—Ç–∞: ${usdCard.number} (–±–∞–ª–∞–Ω—Å: ${usdCard.balance} USD)
    - UAH –∫–∞—Ä—Ç–∞: ${uahCard.number} (–±–∞–ª–∞–Ω—Å: ${uahCard.balance} UAH)`);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    const initialBalances = {
      crypto: parseFloat(cryptoCard.btcBalance || '0'),
      usd: parseFloat(usdCard.balance),
      uah: parseFloat(uahCard.balance)
    };
    
    // –¢–ï–°–¢ 1: –ü–µ—Ä–µ–≤–æ–¥ —Å –∫—Ä–∏–ø—Ç–æ–∫–∞—Ä—Ç—ã –Ω–∞ USD –∫–∞—Ä—Ç—É
    console.log("\nüß™ –¢–ï–°–¢ 1: –ü–µ—Ä–µ–≤–æ–¥ —Å –∫—Ä–∏–ø—Ç–æ–∫–∞—Ä—Ç—ã –Ω–∞ USD –∫–∞—Ä—Ç—É");
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –Ω–µ–±–æ–ª—å—à–æ–π —Å—É–º–º–æ–π –≤ 0.001 BTC
    const btcAmount = 0.001;
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–∂–∏–¥–∞–µ–º—É—é —Å—É–º–º—É –≤ USD
    const expectedUsd = btcAmount * parseFloat(rates.btcToUsd);
    console.log(`‚ÑπÔ∏è –†–∞—Å—á—ë—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: ${btcAmount} BTC = ${expectedUsd.toFixed(2)} USD`);
    
    try {
      // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥
      const transferResult = await storage.transferMoney(
        cryptoCard.id,
        usdCard.number,
        btcAmount
      );
      
      console.log(`‚úÖ –ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ:`, transferResult.transaction);
      
      // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã
      const updatedCryptoCard = await storage.getCardById(cryptoCard.id);
      const updatedUsdCard = await storage.getCardById(usdCard.id);
      
      console.log(`‚ÑπÔ∏è –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã:
      - –ö—Ä–∏–ø—Ç–æ–∫–∞—Ä—Ç–∞: ${parseFloat(updatedCryptoCard.btcBalance).toFixed(8)} BTC (–±—ã–ª–æ ${initialBalances.crypto.toFixed(8)} BTC)
      - USD –∫–∞—Ä—Ç–∞: ${parseFloat(updatedUsdCard.balance).toFixed(2)} USD (–±—ã–ª–æ ${initialBalances.usd.toFixed(2)} USD)`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ –±–∞–ª–∞–Ω—Å –Ω–∞ –æ–∂–∏–¥–∞–µ–º—É—é —Å—É–º–º—É
      // –î–ª—è –∫—Ä–∏–ø—Ç–æ –º—ã —É—á–∏—Ç—ã–≤–∞–µ–º —Ç–∞–∫–∂–µ –∫–æ–º–∏—Å—Å–∏—é 1%
      const btcCommission = btcAmount * 0.01;
      const expectedBtcDebit = btcAmount + btcCommission;
      const actualBtcDiff = initialBalances.crypto - parseFloat(updatedCryptoCard.btcBalance);
      const actualUsdDiff = parseFloat(updatedUsdCard.balance) - initialBalances.usd;
      
      console.log(`‚ÑπÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π:
      - –°–ø–∏—Å–∞–Ω–æ BTC: ${actualBtcDiff.toFixed(8)} (–æ–∂–∏–¥–∞–ª–æ—Å—å: ${expectedBtcDebit.toFixed(8)})
      - –ó–∞—á–∏—Å–ª–µ–Ω–æ USD: ${actualUsdDiff.toFixed(2)} (–æ–∂–∏–¥–∞–ª–æ—Å—å: ${expectedUsd.toFixed(2)})`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —Ä–∞–∑–Ω–∏—Ü–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–∏
      const btcDiffAccurate = Math.abs(actualBtcDiff - expectedBtcDebit) < 0.0000001;
      const usdDiffAccurate = Math.abs(actualUsdDiff - expectedUsd) < 0.01;
      
      if (btcDiffAccurate && usdDiffAccurate) {
        console.log("‚úÖ –¢–ï–°–¢ 1 –ü–†–û–ô–î–ï–ù: –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ");
      } else {
        console.log("‚ùå –¢–ï–°–¢ 1 –ù–ï –ü–†–û–ô–î–ï–ù: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è –≤ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏");
      }
    } catch (error) {
      console.error(`‚ùå –¢–ï–°–¢ 1 –û–®–ò–ë–ö–ê:`, error.message);
    }
    
    // –¢–ï–°–¢ 2: –ü–µ—Ä–µ–≤–æ–¥ —Å –∫—Ä–∏–ø—Ç–æ–∫–∞—Ä—Ç—ã –Ω–∞ UAH –∫–∞—Ä—Ç—É
    console.log("\nüß™ –¢–ï–°–¢ 2: –ü–µ—Ä–µ–≤–æ–¥ —Å –∫—Ä–∏–ø—Ç–æ–∫–∞—Ä—Ç—ã –Ω–∞ UAH –∫–∞—Ä—Ç—É");
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –Ω–µ–±–æ–ª—å—à–æ–π —Å—É–º–º–æ–π –≤ 0.001 BTC
    const btcAmountForUah = 0.001;
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–∂–∏–¥–∞–µ–º—É—é —Å—É–º–º—É –≤ UAH (BTC ‚Üí USD ‚Üí UAH)
    const expectedUahInUsd = btcAmountForUah * parseFloat(rates.btcToUsd);
    const expectedUah = expectedUahInUsd * parseFloat(rates.usdToUah);
    console.log(`‚ÑπÔ∏è –†–∞—Å—á—ë—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: ${btcAmountForUah} BTC ‚Üí ${expectedUahInUsd.toFixed(2)} USD ‚Üí ${expectedUah.toFixed(2)} UAH`);
    
    try {
      // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥
      const transferResult = await storage.transferMoney(
        cryptoCard.id,
        uahCard.number,
        btcAmountForUah
      );
      
      console.log(`‚úÖ –ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ:`, transferResult.transaction);
      
      // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã
      const updatedCryptoCard = await storage.getCardById(cryptoCard.id);
      const updatedUahCard = await storage.getCardById(uahCard.id);
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –±–∞–ª–∞–Ω—Å—ã –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —Ç–µ—Å—Ç–∞
      const currentCryptoBalance = parseFloat(updatedCryptoCard.btcBalance);
      const currentUahBalance = parseFloat(updatedUahCard.balance);
      
      console.log(`‚ÑπÔ∏è –¢–µ–∫—É—â–∏–µ –±–∞–ª–∞–Ω—Å—ã (–ø–æ—Å–ª–µ –¢–ï–°–¢–ê 1):
      - –ö—Ä–∏–ø—Ç–æ–∫–∞—Ä—Ç–∞: ${currentCryptoBalance.toFixed(8)} BTC
      - UAH –∫–∞—Ä—Ç–∞: ${currentUahBalance.toFixed(2)} UAH`);
      
      console.log("‚úÖ –¢–ï–°–¢ 2 –£–°–ü–ï–®–ù–û –í–´–ü–û–õ–ù–ï–ù");
      
    } catch (error) {
      console.error(`‚ùå –¢–ï–°–¢ 2 –û–®–ò–ë–ö–ê:`, error.message);
    }
    
    console.log("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ");
    
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:", error);
  } finally {
    process.exit(0);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
testTransfers();
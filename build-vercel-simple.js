#!/usr/bin/env node

/**
 * –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è Vercel
 */

import { spawn } from 'child_process';
import { fileURLToPath } from 'url';
import { dirname } from 'path';
import fs from 'fs';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

function runCommand(command, args, options = {}) {
  return new Promise((resolve, reject) => {
    console.log(`üîß –ó–∞–ø—É—Å–∫: ${command} ${args.join(' ')}`);
    const child = spawn(command, args, {
      stdio: 'inherit',
      cwd: options.cwd || __dirname,
      ...options
    });

    child.on('close', (code) => {
      if (code === 0) {
        resolve();
      } else {
        reject(new Error(`Command failed with exit code ${code}`));
      }
    });
  });
}

async function main() {
  try {
    console.log('üöÄ –ü—Ä–æ—Å—Ç–∞—è —Å–±–æ—Ä–∫–∞ –¥–ª—è Vercel...');
    
    // –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    if (!fs.existsSync('dist')) {
      fs.mkdirSync('dist', { recursive: true });
    }
    if (!fs.existsSync('dist/public')) {
      fs.mkdirSync('dist/public', { recursive: true });
    }
    
    console.log('üì¶ –°–±–æ—Ä–∫–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —á–∞—Å—Ç–∏ —á–µ—Ä–µ–∑ –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥...');
    
    // –°–æ–∑–¥–∞–Ω–∏–µ —á–∏—Å—Ç–æ–≥–æ vite.config.ts –±–µ–∑ top-level await
    const cleanViteConfig = `
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";
import themePlugin from "@replit/vite-plugin-shadcn-theme-json";
import path, { dirname } from "path";
import { fileURLToPath } from "url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

export default defineConfig({
  plugins: [
    react(),
    themePlugin(),
  ],
  resolve: {
    alias: {
      "@": path.resolve(__dirname, "client", "src"),
      "@shared": path.resolve(__dirname, "shared"),
    },
  },
  root: path.resolve(__dirname, "client"),
  build: {
    outDir: path.resolve(__dirname, "dist/public"),
    emptyOutDir: false,
  },
});`;

    fs.writeFileSync('vite.config.vercel.ts', cleanViteConfig);
    
    // –°–±–æ—Ä–∫–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —á–∞—Å—Ç–∏
    await runCommand('npx', ['vite', 'build', '--config', 'vite.config.vercel.ts'], {
      cwd: __dirname
    });
    
    // –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    fs.unlinkSync('vite.config.vercel.ts');
    
    console.log('‚úÖ –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è —á–∞—Å—Ç—å —Å–æ–±—Ä–∞–Ω–∞');
    
    console.log('üîß –ö–æ–º–ø–∏–ª—è—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ TypeScript...');
    
    // –ö–æ–ø–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω–∏–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ –∏ shared
    if (!fs.existsSync('dist/server')) {
      fs.mkdirSync('dist/server', { recursive: true });
    }
    if (!fs.existsSync('dist/shared')) {
      fs.mkdirSync('dist/shared', { recursive: true });
    }
    
    // –ö–æ–ø–∏—Ä—É–µ–º –ø–∞–ø–∫–∏
    await runCommand('cp', ['-r', 'server/', 'dist/'], { cwd: __dirname });
    await runCommand('cp', ['-r', 'shared/', 'dist/'], { cwd: __dirname });
    
    // –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º TypeScript –≤ JavaScript
    await runCommand('npx', ['tsc', '--target', 'ES2020', '--module', 'ESNext', '--moduleResolution', 'node', '--outDir', 'dist', '--allowSyntheticDefaultImports', '--esModuleInterop'], {
      cwd: __dirname
    });
    
    // –°–æ–∑–¥–∞–µ–º —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞ –¥–ª—è Vercel
    const serverEntry = `import './server/index.js';`;
    fs.writeFileSync('dist/index.js', serverEntry);
    
    console.log('üéâ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
    console.log('  - dist/public/ - —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã');
    console.log('  - dist/index.js - —Å–µ—Ä–≤–µ—Ä–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏:', error.message);
    process.exit(1);
  }
}

main();

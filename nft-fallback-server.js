/**
 * –ó–∞–ø–∞—Å–Ω–æ–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è NFT –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞–ø—Ä—è–º—É—é –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –µ—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π NFT —Å–µ—Ä–≤–µ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
 */

import express from 'express';
import path from 'path';
import fs from 'fs';
import http from 'http';

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.NFT_FALLBACK_PORT || 8082;
const HOST = '0.0.0.0';

// –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Express
const app = express();

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –ª—é–±–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
app.use((req, res, next) => {
  res.header('Access-Control-Allow-Origin', '*');
  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');
  next();
});

// –û—Å–Ω–æ–≤–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞
const projectRoot = process.cwd();

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—É—Ç–µ–π –∫ —Ñ–∞–π–ª–∞–º NFT
const nftPaths = {
  mutant_ape: [
    path.join(projectRoot, 'mutant_ape_nft'),
    path.join(projectRoot, 'mutant_ape_official'),
    path.join(projectRoot, 'nft_assets', 'mutant_ape')
  ],
  bored_ape: [
    path.join(projectRoot, 'bored_ape_nft'),
    path.join(projectRoot, 'bayc_official_nft'),
    path.join(projectRoot, 'new_bored_ape_nft')
  ]
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ª–æ–≥–æ–≤
console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π NFT:');
Object.entries(nftPaths).forEach(([type, paths]) => {
  paths.forEach(dirPath => {
    if (fs.existsSync(dirPath)) {
      console.log(`‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${type} –Ω–∞–π–¥–µ–Ω–∞: ${dirPath}`);
      // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤
      try {
        const files = fs.readdirSync(dirPath);
        console.log(`   üìä –§–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: ${files.length}`);
      } catch (err) {
        console.error(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤: ${err.message}`);
      }
    } else {
      console.log(`‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${type} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: ${dirPath}`);
    }
  });
});

// Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
app.use((req, res, next) => {
  console.log(`üì• ${new Date().toISOString()} - ${req.method} ${req.url}`);
  next();
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è NFT –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function serveNFTImage(req, res, type) {
  const fileName = req.params.fileName;
  console.log(`üîç –ü–æ–∏—Å–∫ ${type} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${fileName}`);
  
  // –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–∞
  const searchPaths = nftPaths[type] || [];
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –ø—É—Ç—å –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞
  for (const dirPath of searchPaths) {
    const filePath = path.join(dirPath, fileName);
    if (fs.existsSync(filePath)) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: ${filePath}`);
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞
      let contentType = 'application/octet-stream';
      if (filePath.endsWith('.png')) {
        contentType = 'image/png';
      } else if (filePath.endsWith('.jpg') || filePath.endsWith('.jpeg')) {
        contentType = 'image/jpeg';
      } else if (filePath.endsWith('.svg')) {
        contentType = 'image/svg+xml';
      }
      
      // –û—Ç–∫–ª—é—á–∞–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è Mutant Ape
      if (type === 'mutant_ape') {
        res.setHeader('Cache-Control', 'no-store, no-cache, must-revalidate, proxy-revalidate');
        res.setHeader('Pragma', 'no-cache');
        res.setHeader('Expires', '0');
      } else {
        // –†–∞–∑—Ä–µ—à–∞–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ NFT
        res.setHeader('Cache-Control', 'public, max-age=3600');
      }
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞
      res.setHeader('Content-Type', contentType);
      res.setHeader('X-Served-By', 'nft-fallback-server');
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
      return fs.createReadStream(filePath).pipe(res);
    }
  }
  
  // –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ –æ–¥–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  console.log(`‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: ${fileName}`);
  res.status(404).send(`NFT Image Not Found: ${fileName}`);
}

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è Mutant Ape NFT
app.get('/mutant_ape_nft/:fileName', (req, res) => serveNFTImage(req, res, 'mutant_ape'));
app.get('/mutant_ape_official/:fileName', (req, res) => serveNFTImage(req, res, 'mutant_ape'));
app.get('/nft_assets/mutant_ape/:fileName', (req, res) => serveNFTImage(req, res, 'mutant_ape'));

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è Bored Ape NFT
app.get('/bored_ape_nft/:fileName', (req, res) => serveNFTImage(req, res, 'bored_ape'));
app.get('/bayc_official_nft/:fileName', (req, res) => serveNFTImage(req, res, 'bored_ape'));
app.get('/new_bored_ape_nft/:fileName', (req, res) => serveNFTImage(req, res, 'bored_ape'));

// –û–±—â–∏–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –¥—Ä—É–≥–∏–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏
app.get('/:dirName/:fileName', (req, res) => {
  const { dirName, fileName } = req.params;
  console.log(`üîç –û–±—â–∏–π –∑–∞–ø—Ä–æ—Å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${dirName}, —Ñ–∞–π–ª ${fileName}`);
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø NFT –ø–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  let type = null;
  if (dirName.includes('mutant') || dirName.includes('mayc')) {
    type = 'mutant_ape';
  } else if (dirName.includes('bored') || dirName.includes('bayc')) {
    type = 'bored_ape';
  }
  
  if (type) {
    return serveNFTImage(req, res, type);
  }
  
  // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø NFT
  res.status(404).send(`Unknown NFT type: ${dirName}`);
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
app.get('/status', (req, res) => {
  res.json({
    status: 'ok',
    server: 'nft-fallback-server',
    port: PORT,
    timestamp: new Date().toISOString()
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', err);
  res.status(500).send('Internal Server Error');
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const server = http.createServer(app);
server.listen(PORT, HOST, () => {
  console.log(`üöÄ NFT Fallback Server –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://${HOST}:${PORT}`);
  console.log('‚ö° –ì–æ—Ç–æ–≤ –æ–±—Å–ª—É–∂–∏–≤–∞—Ç—å NFT –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–ø—Ä—è–º—É—é –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã');
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Ä—Ç –≤ —Ñ–∞–π–ª –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥—Ä—É–≥–∏–º–∏ —á–∞—Å—Ç—è–º–∏ —Å–∏—Å—Ç–µ–º—ã
  try {
    fs.writeFileSync('./nft-fallback-port.txt', PORT.toString(), 'utf8');
    console.log(`‚úÖ –ü–æ—Ä—Ç NFT Fallback Server —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: ${PORT}`);
  } catch (err) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ—Ä—Ç–∞ –≤ —Ñ–∞–π–ª: ${err.message}`);
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGTERM', () => {
  console.log('üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
  server.close(() => {
    console.log('‚úì –°–µ—Ä–≤–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    process.exit(0);
  });
});

process.on('SIGINT', () => {
  console.log('üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
  server.close(() => {
    console.log('‚úì –°–µ—Ä–≤–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    process.exit(0);
  });
});